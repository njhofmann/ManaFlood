--Turn on foreign keys
PRAGMA foreign_keys = ON;

--Enum of all mana types in MTG, read as "___ mana".
CREATE TABLE ManaType (
  symbol TEXT PRIMARY KEY,
  type TEXT NOT NULL
);

INSERT INTO ManaType (symbol, type) VALUES
("{G}", "Green"),
("{U}", "Blue"),
("{R}", "Red"),
("{W}", "White"),
("{B}", "Black"),
("{C}", "Colorless"),
("{X}", "Variable Generic"),
("{1}", "Integer Generic"),
("{G/P}", "Phyrexian Green"),
("{U/P}", "Phyrexian Blue"),
("{R/P}", "Phyrexian Red"),
("{W/P}", "Phyrexian White"),
("{B/P}", "Phyrexian Black"),
("{W/U}", "White Blue"),
("{W/B}", "White Black"),
("{B/R}", "Black Red"),
("{B/G}", "Black Green"),
("{U/B}", "Blue Black"),
("{U/R}", "Blue Red"),
("{R/G}", "Red Green"),
("{R/W}", "Red White"),
("{G/W}", "Green White"),
("{G/U}", "Green Blue"),
("{2/W}", "2 Generic or White"),
("{2/B}", "2 Generic or Black"),
("{2/R}", "2 Generic or Red"),
("{2/U}", "2 Generic or Blue"),
("{2/G}", "2 Generic or Green");

--Enum of all card rarities in MTG
CREATE TABLE Rarity (
  type TEXT PRIMARY KEY
);

INSERT INTO Rarity(type) VALUES
("mythic"),
("rare"),
("uncommon"),
("common"),
("timeshifted rare"),
("timeshifted uncommon"),
("timeshifted common");

--Enum of all card supertypes in MTG
CREATE TABLE Supertype (
  type TEXT PRIMARY KEY
);

INSERT INTO Supertype(type) VALUES
("basic"),
("elite"),
("legendary"),
("ongoing"),
("snow"),
("world");

--Enum of all card types in MTG
CREATE TABLE Type (
  type TEXT PRIMARY KEY
);

INSERT INTO Type(type) VALUES
("artifact"),
("conspiracy"),
("creature"),
("enchantment"),
("instant"),
("hero"),
("land"),
("phenomenon"),
("plane"),
("planeswalker"),
("scheme"),
("sorcery"),
("tribal"),
("vanguard");

--Enum of all the types of two faced cards
CREATE TABLE TwoCardsType (
  type TEXT PRIMARY KEY
);

INSERT INTO TwoCardsType VALUES
("split"),
("flip"),
("transform");

--Enum of all the types of three faced cards
CREATE TABLE ThreeCardsType (
  type TEXT PRIMARY KEY
);

INSERT INTO ThreeCardsType VALUES
("meld");

--All the different expansions that have been released in MTG's history
CREATE TABLE Expansion (
  abbrv TEXT PRIMARY KEY,
  expansion TEXT NOT NULL,
  size INTEGER NOT NULL
 );

--An individual card
CREATE TABLE Card (
  name TEXT PRIMARY KEY,
  card_text TEXT NOT NULL,
  cmc INTEGER NOT NULL
 );

--If cards has power and toughness, stores those values
--Not all p/t's are integers, some may be non-integer symbols like X or *
CREATE TABLE PTStats (
  card_name TEXT PRIMARY KEY,
  power TEXT NOT NULL,
  toughness TEXT NOT NULL,
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

--If card has planeswalker loyalty, stores associated value - may not be an integer
CREATE TABLE PlaneswalkerStats (
  card_name TEXT PRIMARY KEY,
  loyalty TEXT NOT NULL,
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

--
CREATE TABLE CardMana (
  card_name TEXT,
  mana_type TEXT,
  quantity INTEGER NOT NULL,
  PRIMARY KEY(card_name, mana_type),
  FOREIGN KEY(card_name) REFERENCES Card(name)
  FOREIGN KEY(mana_type) REFERENCES ManaType(symbol)
);

CREATE TABLE CardExpansion (
  card_name TEXT,
  expansion TEXT,
  number TEXT,
  rarity TEXT NOT NULL,
  flavor_text TEXT NOT NULL,
  artist TEXT NOT NULL,
  PRIMARY KEY(card_name, expansion, number),
  FOREIGN KEY(card_name) REFERENCES Card(name),
  FOREIGN KEY(expansion) REFERENCES Expansion(abbrv),
  FOREIGN KEY(rarity) REFERENCES Rarity(type)
);

CREATE TABLE CardSupertype (
  card_name TEXT,
  supertype TEXT,
  PRIMARY KEY(card_name, supertype),
  FOREIGN KEY(card_name) REFERENCES Card(name),
  FOREIGN KEY(supertype) REFERENCES Supertype(type)
);

CREATE TABLE CardType (
  card_name TEXT,
  type TEXT,
  PRIMARY KEY(card_name, type),
  FOREIGN KEY(card_name) REFERENCES Card(name),
  FOREIGN KEY(type) REFERENCES Type(type)
);

--All the subtypes associated with a card, subtypes are not considered a enum as they are likely to
--be expanded
CREATE TABLE CardSubtype (
  card_name TEXT,
  subtype TEXT,
  PRIMARY KEY(card_name, subtype),
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

CREATE TABLE TwoCards (
  card_a TEXT,
  card_b TEXT,
  type TEXT,
  total_cmc INTEGER NOT NULL,
  PRIMARY KEY (card_a, card_b),
  FOREIGN KEY(card_a) REFERENCES Card(name),
  FOREIGN KEY(card_b) REFERENCES Card(name),
  FOREIGN KEY(type) REFERENCES TwoCardsType(type)
);

CREATE TABLE ThreeCards (
  card_a TEXT,
  card_b TEXT,
  card_c TEXT,
  type TEXT,
  total_cmc INTEGER NOT NULL,
  PRIMARY KEY (card_a, card_b, card_c),
  FOREIGN KEY(card_a) REFERENCES Card(name),
  FOREIGN KEY(card_b) REFERENCES Card(name),
  FOREIGN KEY(card_c) REFERENCES Card(name),
  FOREIGN KEY(type) REFERENCES ThreeCardsType(type)
);

--An individual deck of MTG cards
CREATE TABLE Deck (
  id INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  desp TEXT NOT NULL
);

--An instance of an individual deck
CREATE TABLE DeckInstance (
  deck_id INTEGER NOT NULL,
  creation TIMESTMP NOT NULL,
  PRIMARY KEY(deck_id, creation),
  FOREIGN KEY(deck_id) REFERENCES DECK(id) ON DELETE CASCADE
);

--A category of cards in a deck instance
CREATE TABLE DeckInstCategory (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  category TEXT NOT NULL,
  PRIMARY KEY(deck_id, deck_inst_creation, category),
  FOREIGN KEY(deck_id, deck_inst_creation) REFERENCES DeckInstance(deck_id, creation) ON DELETE CASCADE
);

--A card in a deck instance
CREATE TABLE DeckInstCard (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  card_name TEXT NOT NULL,
  PRIMARY KEY(deck_id, deck_inst_creation, card_name),
  FOREIGN KEY(deck_id, deck_inst_creation) REFERENCES DeckInstance(deck_id, creation) ON DELETE CASCADE
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

--A specific instance of a card (that is in a deck instance) with some quantity
CREATE TABLE DeckInstCardExpansion (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  card_name TEXT NOT NULL,
  expansion TEXT,
  card_number TEXT,
  quantity INTEGER NOT NULL CHECK(quantity > 0),
  PRIMARY KEY(deck_id, deck_inst_creation, card_name, expansion, card_number),
  FOREIGN KEY(deck_id, deck_inst_creation) REFERENCES DeckInstance(deck_id, creation) ON DELETE CASCADE,
  FOREIGN KEY(deck_id, deck_inst_creation, card_name) REFERENCES DeckInstCard(deck_id, creation, card_name) ON DELETE CASCADE,
  FOREIGN KEY(card_name) REFERENCES Card(name),
  FOREIGN KEY(expansion) REFERENCES Expansion(abbrv),
  FOREIGN KEY(card_name, expansion, card_number) REFERENCES CardExpansion(card_name, expansion, number)
);

--Category of a card (that is in a deck instance) is in, category is one of categories of that deck instance
CREATE TABLE DeckInstCardCategory (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  card_name TEXT NOT NULL,
  category TEXT NOT NULL,
  PRIMARY KEY(deck_id, deck_inst_creation, card_name, category),
  FOREIGN KEY(deck_id, deck_inst_creation, card_name) REFERENCES DeckInstCard(deck_id, creation, card_name) ON DELETE CASCADE,
  FOREIGN KEY(deck_id, deck_inst_creation, category) REFERENCES DeckInstCategory(deck_id, creation, category) ON DELETE CASCADE,
  FOREIGN KEY(card_name) REFERENCES Card(name)
);