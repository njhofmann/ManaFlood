--Turn on foreign keys
PRAGMA foreign_keys = ON;

--All the different expansions that have been released in MTG's history
CREATE TABLE Expansion (
  expansion TEXT PRIMARY KEY,
  abbrv TEXT NOT NULL,
  size INTEGER NOT NULL,
  release_date TIMESTAMP NOT NULL
);

--If expansion is apart of a block, references it here
CREATE TABLE Block (
  expansion TEXT PRIMARY KEY,
  block TEXT NOT NULL,
  FOREIGN KEY(expansion) REFERENCES Expansion(expansion)
);

--An individual card
CREATE TABLE Card (
  name TEXT PRIMARY KEY,
  card_text TEXT NOT NULL
);

--All the colors associated with a card.
CREATE TABLE Color (
  card_name TEXT NOT NULL,
  color TEXT NOT NULL,
  PRIMARY KEY(card_name, color),
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

--All the colors associated with a card's color identity.
CREATE TABLE ColorIdentity (
  card_name TEXT NOT NULL,
  color TEXT NOT NULL,
  PRIMARY KEY(card_name, color),
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

--Stores extra stats associated with a card - cmc, power, toughness, and loyalty - under category
CREATE TABLE Stat (
  card_name TEXT,
  category TEXT,
  value TEXT NOT NULL,
  base_value INTEGER NOT NULL,
  PRIMARY KEY(card_name, category),
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

CREATE TABLE Mana (
  card_name TEXT,
  mana_type TEXT,
  quantity INTEGER NOT NULL,
  PRIMARY KEY(card_name, mana_type),
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

CREATE TABLE CardExpansion (
  card_name TEXT,
  expansion TEXT,
  number TEXT,
  rarity TEXT NOT NULL,
  flavor_text TEXT NOT NULL,
  artist TEXT NOT NULL,
  PRIMARY KEY(card_name, expansion, number),
  FOREIGN KEY(card_name) REFERENCES Card(name),
  FOREIGN KEY(expansion) REFERENCES Expansion(expansion)
);

--All the types associated with a card - category determines if type is supertype, type, or subtype
CREATE TABLE Type (
  card_name TEXT,
  type TEXT,
  category TEXT NOT NULL,
  PRIMARY KEY(card_name, type),
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

CREATE TABLE TwoCards (
  card_a TEXT,
  card_b TEXT,
  type TEXT NOT NULL,
  total_cmc INTEGER NOT NULL,
  PRIMARY KEY (card_a, card_b),
  FOREIGN KEY(card_a) REFERENCES Card(name),
  FOREIGN KEY(card_b) REFERENCES Card(name)
);

CREATE TABLE ThreeCards (
  card_a TEXT,
  card_b TEXT,
  card_c TEXT,
  type TEXT NOT NULL,
  total_cmc INTEGER NOT NULL,
  PRIMARY KEY (card_a, card_b, card_c),
  FOREIGN KEY(card_a) REFERENCES Card(name),
  FOREIGN KEY(card_b) REFERENCES Card(name),
  FOREIGN KEY(card_c) REFERENCES Card(name)
);

--An individual deck of MTG cards
CREATE TABLE Deck (
  id INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  desp TEXT NOT NULL
);

--An instance of an individual deck
CREATE TABLE DeckInstance (
  deck_id INTEGER NOT NULL,
  creation TIMESTAMP NOT NULL,
  PRIMARY KEY(deck_id, creation),
  FOREIGN KEY(deck_id) REFERENCES DECK(id) ON DELETE CASCADE
);

--A category of cards in a deck instance
CREATE TABLE DeckInstCategory (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  category TEXT NOT NULL,
  PRIMARY KEY(deck_id, deck_inst_creation, category),
  FOREIGN KEY(deck_id, deck_inst_creation) REFERENCES DeckInstance(deck_id, creation) ON DELETE CASCADE
);

--A card in a deck instance
CREATE TABLE DeckInstCard (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  card_name TEXT NOT NULL,
  PRIMARY KEY(deck_id, deck_inst_creation, card_name),
  FOREIGN KEY(deck_id, deck_inst_creation) REFERENCES DeckInstance(deck_id, creation) ON DELETE CASCADE
  FOREIGN KEY(card_name) REFERENCES Card(name)
);

--A specific instance of a card (that is in a deck instance) with some quantity
CREATE TABLE DeckInstCardExpansion (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  card_name TEXT NOT NULL,
  expansion TEXT,
  card_number TEXT,
  quantity INTEGER NOT NULL CHECK(quantity > 0),
  PRIMARY KEY(deck_id, deck_inst_creation, card_name, expansion, card_number),
  FOREIGN KEY(deck_id, deck_inst_creation) REFERENCES DeckInstance(deck_id, creation) ON DELETE CASCADE,
  FOREIGN KEY(deck_id, deck_inst_creation, card_name) REFERENCES DeckInstCard(deck_id, creation, card_name) ON DELETE CASCADE,
  FOREIGN KEY(card_name) REFERENCES Card(name),
  FOREIGN KEY(expansion) REFERENCES Expansion(expansion),
  FOREIGN KEY(card_name, expansion, card_number) REFERENCES CardExpansion(card_name, expansion, number)
);

--Category of a card (that is in a deck instance) is in, category is one of categories of that deck instance
CREATE TABLE DeckInstCardCategory (
  deck_id INTEGER,
  deck_inst_creation TIMESTAMP,
  card_name TEXT NOT NULL,
  category TEXT NOT NULL,
  PRIMARY KEY(deck_id, deck_inst_creation, card_name, category),
  FOREIGN KEY(deck_id, deck_inst_creation, card_name) REFERENCES DeckInstCard(deck_id, creation, card_name) ON DELETE CASCADE,
  FOREIGN KEY(deck_id, deck_inst_creation, category) REFERENCES DeckInstCategory(deck_id, creation, category) ON DELETE CASCADE,
  FOREIGN KEY(card_name) REFERENCES Card(name)
);